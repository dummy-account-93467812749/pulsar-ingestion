# Configuration for the Pulsar Source Connector
# connectorClass: org.apache.pulsar.io.pulsar.source.PulsarSource (Update with actual class name later)

# Pulsar Client Connection Configuration
serviceUrl: "pulsar://localhost:6650" # Pulsar broker service URL
# webServiceUrl: "http://localhost:8080" # Optional: Pulsar web service URL (for admin tasks, less common for source)

# Pulsar Consumer Configuration
topicNames: # List of topics to subscribe to.
  - "persistent://public/default/input-topic1"
# topicsPattern: "persistent://public/default/input-.*" # Alternative to topicNames for pattern subscription
subscriptionName: "my-pulsar-source-subscription"
subscriptionType: "Shared" # Options: Exclusive, Shared, Failover, Key_Shared. Default: Exclusive
receiverQueueSize: 1000 # Size of the consumer's receiver queue
ackTimeoutMillis: 30000 # Timeout for message acknowledgments
negativeAckRedeliveryDelayMicros: 60000000 # 1 minute: Delay for redelivery of negatively acknowledged messages
# deadLetterPolicy: # Optional: Configure Dead Letter Policy
#   maxRedeliverCount: 10
#   deadLetterTopic: "persistent://public/default/my-dlq-topic"
#   initialSubscriptionName: "my-dlq-subscription" # Optional: Subscription for DLQ topic
# retryEnable: false # Whether to retry messages that failed processing (false means send to DLQ or discard)

# Authentication (Optional)
# Example: Token Authentication
# authPluginClassName: "org.apache.pulsar.client.impl.auth.AuthenticationToken"
# authParams: "token:YOUR_JWT_TOKEN_HERE"

# Example: OAuth2 Authentication (values typically provided via environment or other secure means)
# authPluginClassName: "org.apache.pulsar.client.impl.auth.oauth2.AuthenticationOAuth2"
# authParams: >
#   {
#     "type": "client_credentials",
#     "issuerUrl": "https://your-issuer-url.com",
#     "credentialsFilePath": "file:///path/to/your/credentials-file.json",
#     "audience": "your-audience"
#   }

# TLS Configuration (Optional - usually if serviceUrl starts with pulsar+ssl://)
# tlsTrustCertsFilePath: "/path/to/ca.cert.pem" # Path to the trusted TLS certificate file
# tlsAllowInsecureConnection: false # Set to true to allow connections to brokers without a trusted certificate (NOT RECOMMENDED for production)
# tlsHostnameVerificationEnable: false # Set to true to enable hostname verification (RECOMMENDED for production)
# tlsKeyFilePath: "/path/to/client-key.pem" # If using TLS client authentication
# tlsCertificateFilePath: "/path/to/client-cert.pem" # If using TLS client authentication

# Additional Pulsar consumer properties (as a map)
# These are passed directly to the ConsumerBuilder.
# See: https://pulsar.apache.org/docs/next/client-libraries-java/#consumer-configuration
# consumerProperties:
#   priorityLevel: 0
#   readCompacted: false
#   subscriptionInitialPosition: "Latest" # Earliest, Latest

# Pulsar Source specific (not directly Pulsar client consumer config)
# messageFormat: "BYTES" # How messages are emitted. Default: BYTES. Future: STRING, JSON.
# schemaType: "BYTES" # Schema for Pulsar consumer. Default: BYTES. Can be AVRO, JSON, etc. (requires schema definition if not BYTES/STRING)
# schemaDefinition: "" # JSON or AVRO schema definition string, if schemaType requires it.
# maxFetchTimeMillis: 1000 # Max time to wait for messages in one fetch operation (internal source loop)
# failureRetries: 3 # Number of times to retry processing a message if source's processing logic fails (before DLQ/discard)
# retryDelayMillis: 5000 # Delay between retries
# metricsEnabled: true # Whether to enable source-specific metrics
# forwardKey: true # Whether to forward the Pulsar message key as the Pulsar IO Record key
# forwardProperties: true # Whether to forward Pulsar message properties as Pulsar IO Record properties
# forwardMessageId: false # Whether to forward Pulsar message ID as a property
# forwardSequenceId: false # Whether to forward Pulsar message sequence ID as a property
# forwardPublishTime: false # Whether to forward Pulsar message publish time as a property
# Optional: Specify the output format for the message payload.
# Supported values: "STRING", "JSON", "AVRO", "PROTOBUF", "BYTES"
# If not specified, defaults to "BYTES".
# outputFormat: "JSON"
